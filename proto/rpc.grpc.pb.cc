// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: rpc.proto

#include "rpc.pb.h"
#include "rpc.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace paxoskv {

static const char* KVService_method_names[] = {
  "/paxoskv.KVService/Put",
  "/paxoskv.KVService/GetLocal",
  "/paxoskv.KVService/GetGlobal",
  "/paxoskv.KVService/Delete",
};

std::unique_ptr< KVService::Stub> KVService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< KVService::Stub> stub(new KVService::Stub(channel));
  return stub;
}

KVService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_Put_(KVService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetLocal_(KVService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetGlobal_(KVService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Delete_(KVService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status KVService::Stub::Put(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::paxoskv::KVResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_Put_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::paxoskv::KVResponse>* KVService::Stub::AsyncPutRaw(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::paxoskv::KVResponse>::Create(channel_.get(), cq, rpcmethod_Put_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::paxoskv::KVResponse>* KVService::Stub::PrepareAsyncPutRaw(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::paxoskv::KVResponse>::Create(channel_.get(), cq, rpcmethod_Put_, context, request, false);
}

::grpc::Status KVService::Stub::GetLocal(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::paxoskv::KVResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetLocal_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::paxoskv::KVResponse>* KVService::Stub::AsyncGetLocalRaw(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::paxoskv::KVResponse>::Create(channel_.get(), cq, rpcmethod_GetLocal_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::paxoskv::KVResponse>* KVService::Stub::PrepareAsyncGetLocalRaw(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::paxoskv::KVResponse>::Create(channel_.get(), cq, rpcmethod_GetLocal_, context, request, false);
}

::grpc::Status KVService::Stub::GetGlobal(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::paxoskv::KVResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetGlobal_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::paxoskv::KVResponse>* KVService::Stub::AsyncGetGlobalRaw(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::paxoskv::KVResponse>::Create(channel_.get(), cq, rpcmethod_GetGlobal_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::paxoskv::KVResponse>* KVService::Stub::PrepareAsyncGetGlobalRaw(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::paxoskv::KVResponse>::Create(channel_.get(), cq, rpcmethod_GetGlobal_, context, request, false);
}

::grpc::Status KVService::Stub::Delete(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::paxoskv::KVResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_Delete_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::paxoskv::KVResponse>* KVService::Stub::AsyncDeleteRaw(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::paxoskv::KVResponse>::Create(channel_.get(), cq, rpcmethod_Delete_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::paxoskv::KVResponse>* KVService::Stub::PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::paxoskv::KVOperator& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::paxoskv::KVResponse>::Create(channel_.get(), cq, rpcmethod_Delete_, context, request, false);
}

KVService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      KVService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< KVService::Service, ::paxoskv::KVOperator, ::paxoskv::KVResponse>(
          std::mem_fn(&KVService::Service::Put), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      KVService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< KVService::Service, ::paxoskv::KVOperator, ::paxoskv::KVResponse>(
          std::mem_fn(&KVService::Service::GetLocal), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      KVService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< KVService::Service, ::paxoskv::KVOperator, ::paxoskv::KVResponse>(
          std::mem_fn(&KVService::Service::GetGlobal), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      KVService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< KVService::Service, ::paxoskv::KVOperator, ::paxoskv::KVResponse>(
          std::mem_fn(&KVService::Service::Delete), this)));
}

KVService::Service::~Service() {
}

::grpc::Status KVService::Service::Put(::grpc::ServerContext* context, const ::paxoskv::KVOperator* request, ::paxoskv::KVResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status KVService::Service::GetLocal(::grpc::ServerContext* context, const ::paxoskv::KVOperator* request, ::paxoskv::KVResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status KVService::Service::GetGlobal(::grpc::ServerContext* context, const ::paxoskv::KVOperator* request, ::paxoskv::KVResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status KVService::Service::Delete(::grpc::ServerContext* context, const ::paxoskv::KVOperator* request, ::paxoskv::KVResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace paxoskv

