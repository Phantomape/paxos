// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: rpc.proto
#ifndef GRPC_rpc_2eproto__INCLUDED
#define GRPC_rpc_2eproto__INCLUDED

#include "rpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace paxos {

class KV final {
 public:
  static constexpr char const* service_full_name() {
    return "paxos.KV";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Put(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::paxos::KVResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>> AsyncPut(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>>(AsyncPutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>> PrepareAsyncPut(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>>(PrepareAsyncPutRaw(context, request, cq));
    }
    virtual ::grpc::Status GetLocal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::paxos::KVResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>> AsyncGetLocal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>>(AsyncGetLocalRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>> PrepareAsyncGetLocal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>>(PrepareAsyncGetLocalRaw(context, request, cq));
    }
    virtual ::grpc::Status GetGlobal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::paxos::KVResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>> AsyncGetGlobal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>>(AsyncGetGlobalRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>> PrepareAsyncGetGlobal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>>(PrepareAsyncGetGlobalRaw(context, request, cq));
    }
    virtual ::grpc::Status Delete(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::paxos::KVResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>> AsyncDelete(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>>(AsyncDeleteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>> PrepareAsyncDelete(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>>(PrepareAsyncDeleteRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>* AsyncPutRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>* PrepareAsyncPutRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>* AsyncGetLocalRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>* PrepareAsyncGetLocalRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>* AsyncGetGlobalRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>* PrepareAsyncGetGlobalRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>* AsyncDeleteRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::paxos::KVResponse>* PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status Put(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::paxos::KVResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>> AsyncPut(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>>(AsyncPutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>> PrepareAsyncPut(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>>(PrepareAsyncPutRaw(context, request, cq));
    }
    ::grpc::Status GetLocal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::paxos::KVResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>> AsyncGetLocal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>>(AsyncGetLocalRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>> PrepareAsyncGetLocal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>>(PrepareAsyncGetLocalRaw(context, request, cq));
    }
    ::grpc::Status GetGlobal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::paxos::KVResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>> AsyncGetGlobal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>>(AsyncGetGlobalRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>> PrepareAsyncGetGlobal(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>>(PrepareAsyncGetGlobalRaw(context, request, cq));
    }
    ::grpc::Status Delete(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::paxos::KVResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>> AsyncDelete(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>>(AsyncDeleteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>> PrepareAsyncDelete(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>>(PrepareAsyncDeleteRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>* AsyncPutRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>* PrepareAsyncPutRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>* AsyncGetLocalRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>* PrepareAsyncGetLocalRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>* AsyncGetGlobalRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>* PrepareAsyncGetGlobalRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>* AsyncDeleteRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::paxos::KVResponse>* PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::paxos::KVOperator& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Put_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLocal_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGlobal_;
    const ::grpc::internal::RpcMethod rpcmethod_Delete_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Put(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response);
    virtual ::grpc::Status GetLocal(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response);
    virtual ::grpc::Status GetGlobal(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response);
    virtual ::grpc::Status Delete(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Put : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_Put() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Put() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Put(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPut(::grpc::ServerContext* context, ::paxos::KVOperator* request, ::grpc::ServerAsyncResponseWriter< ::paxos::KVResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLocal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetLocal() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetLocal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLocal(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLocal(::grpc::ServerContext* context, ::paxos::KVOperator* request, ::grpc::ServerAsyncResponseWriter< ::paxos::KVResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGlobal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetGlobal() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetGlobal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGlobal(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGlobal(::grpc::ServerContext* context, ::paxos::KVOperator* request, ::grpc::ServerAsyncResponseWriter< ::paxos::KVResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_Delete() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelete(::grpc::ServerContext* context, ::paxos::KVOperator* request, ::grpc::ServerAsyncResponseWriter< ::paxos::KVResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Put<WithAsyncMethod_GetLocal<WithAsyncMethod_GetGlobal<WithAsyncMethod_Delete<Service > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_Put : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_Put() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Put() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Put(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLocal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetLocal() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetLocal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLocal(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGlobal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetGlobal() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetGlobal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGlobal(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_Delete() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Put : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_Put() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::paxos::KVOperator, ::paxos::KVResponse>(std::bind(&WithStreamedUnaryMethod_Put<BaseClass>::StreamedPut, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Put() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Put(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPut(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::paxos::KVOperator,::paxos::KVResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLocal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetLocal() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::paxos::KVOperator, ::paxos::KVResponse>(std::bind(&WithStreamedUnaryMethod_GetLocal<BaseClass>::StreamedGetLocal, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetLocal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLocal(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLocal(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::paxos::KVOperator,::paxos::KVResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetGlobal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetGlobal() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::paxos::KVOperator, ::paxos::KVResponse>(std::bind(&WithStreamedUnaryMethod_GetGlobal<BaseClass>::StreamedGetGlobal, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetGlobal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGlobal(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetGlobal(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::paxos::KVOperator,::paxos::KVResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_Delete() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::paxos::KVOperator, ::paxos::KVResponse>(std::bind(&WithStreamedUnaryMethod_Delete<BaseClass>::StreamedDelete, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Delete(::grpc::ServerContext* context, const ::paxos::KVOperator* request, ::paxos::KVResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelete(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::paxos::KVOperator,::paxos::KVResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Put<WithStreamedUnaryMethod_GetLocal<WithStreamedUnaryMethod_GetGlobal<WithStreamedUnaryMethod_Delete<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Put<WithStreamedUnaryMethod_GetLocal<WithStreamedUnaryMethod_GetGlobal<WithStreamedUnaryMethod_Delete<Service > > > > StreamedService;
};

}  // namespace paxos


#endif  // GRPC_rpc_2eproto__INCLUDED
