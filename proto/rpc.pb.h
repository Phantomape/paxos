// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#ifndef PROTOBUF_rpc_2eproto__INCLUDED
#define PROTOBUF_rpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace paxoskv {
class KVData;
class KVDataDefaultTypeInternal;
extern KVDataDefaultTypeInternal _KVData_default_instance_;
class KVOperator;
class KVOperatorDefaultTypeInternal;
extern KVOperatorDefaultTypeInternal _KVOperator_default_instance_;
class KVResponse;
class KVResponseDefaultTypeInternal;
extern KVResponseDefaultTypeInternal _KVResponse_default_instance_;
}  // namespace paxoskv

namespace paxoskv {

namespace protobuf_rpc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_rpc_2eproto

// ===================================================================

class KVOperator : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:paxoskv.KVOperator) */ {
 public:
  KVOperator();
  virtual ~KVOperator();

  KVOperator(const KVOperator& from);

  inline KVOperator& operator=(const KVOperator& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KVOperator(KVOperator&& from) noexcept
    : KVOperator() {
    *this = ::std::move(from);
  }

  inline KVOperator& operator=(KVOperator&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVOperator& default_instance();

  static inline const KVOperator* internal_default_instance() {
    return reinterpret_cast<const KVOperator*>(
               &_KVOperator_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(KVOperator* other);
  friend void swap(KVOperator& a, KVOperator& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KVOperator* New() const PROTOBUF_FINAL { return New(NULL); }

  KVOperator* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KVOperator& from);
  void MergeFrom(const KVOperator& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KVOperator* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint64 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // uint32 operator = 4;
  void clear_operator_();
  static const int kOperatorFieldNumber = 4;
  ::google::protobuf::uint32 operator_() const;
  void set_operator_(::google::protobuf::uint32 value);

  // uint32 sid = 5;
  void clear_sid();
  static const int kSidFieldNumber = 5;
  ::google::protobuf::uint32 sid() const;
  void set_sid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:paxoskv.KVOperator)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint32 operator__;
  ::google::protobuf::uint32 sid_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KVData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:paxoskv.KVData) */ {
 public:
  KVData();
  virtual ~KVData();

  KVData(const KVData& from);

  inline KVData& operator=(const KVData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KVData(KVData&& from) noexcept
    : KVData() {
    *this = ::std::move(from);
  }

  inline KVData& operator=(KVData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVData& default_instance();

  static inline const KVData* internal_default_instance() {
    return reinterpret_cast<const KVData*>(
               &_KVData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(KVData* other);
  friend void swap(KVData& a, KVData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KVData* New() const PROTOBUF_FINAL { return New(NULL); }

  KVData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KVData& from);
  void MergeFrom(const KVData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KVData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint64 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // bool isdeleted = 3;
  void clear_isdeleted();
  static const int kIsdeletedFieldNumber = 3;
  bool isdeleted() const;
  void set_isdeleted(bool value);

  // @@protoc_insertion_point(class_scope:paxoskv.KVData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 version_;
  bool isdeleted_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KVResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:paxoskv.KVResponse) */ {
 public:
  KVResponse();
  virtual ~KVResponse();

  KVResponse(const KVResponse& from);

  inline KVResponse& operator=(const KVResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KVResponse(KVResponse&& from) noexcept
    : KVResponse() {
    *this = ::std::move(from);
  }

  inline KVResponse& operator=(KVResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVResponse& default_instance();

  static inline const KVResponse* internal_default_instance() {
    return reinterpret_cast<const KVResponse*>(
               &_KVResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(KVResponse* other);
  friend void swap(KVResponse& a, KVResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KVResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  KVResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KVResponse& from);
  void MergeFrom(const KVResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KVResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .paxoskv.KVData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::paxoskv::KVData& data() const;
  ::paxoskv::KVData* mutable_data();
  ::paxoskv::KVData* release_data();
  void set_allocated_data(::paxoskv::KVData* data);

  // uint64 master_nodeid = 3;
  void clear_master_nodeid();
  static const int kMasterNodeidFieldNumber = 3;
  ::google::protobuf::uint64 master_nodeid() const;
  void set_master_nodeid(::google::protobuf::uint64 value);

  // int32 ret = 2;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:paxoskv.KVResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::paxoskv::KVData* data_;
  ::google::protobuf::uint64 master_nodeid_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// KVOperator

// string key = 1;
inline void KVOperator::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KVOperator::key() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVOperator.key)
  return key_.GetNoArena();
}
inline void KVOperator::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxoskv.KVOperator.key)
}
#if LANG_CXX11
inline void KVOperator::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxoskv.KVOperator.key)
}
#endif
inline void KVOperator::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxoskv.KVOperator.key)
}
inline void KVOperator::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxoskv.KVOperator.key)
}
inline ::std::string* KVOperator::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:paxoskv.KVOperator.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVOperator::release_key() {
  // @@protoc_insertion_point(field_release:paxoskv.KVOperator.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVOperator::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:paxoskv.KVOperator.key)
}

// bytes value = 2;
inline void KVOperator::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KVOperator::value() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVOperator.value)
  return value_.GetNoArena();
}
inline void KVOperator::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxoskv.KVOperator.value)
}
#if LANG_CXX11
inline void KVOperator::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxoskv.KVOperator.value)
}
#endif
inline void KVOperator::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxoskv.KVOperator.value)
}
inline void KVOperator::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxoskv.KVOperator.value)
}
inline ::std::string* KVOperator::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:paxoskv.KVOperator.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVOperator::release_value() {
  // @@protoc_insertion_point(field_release:paxoskv.KVOperator.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVOperator::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:paxoskv.KVOperator.value)
}

// uint64 version = 3;
inline void KVOperator::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 KVOperator::version() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVOperator.version)
  return version_;
}
inline void KVOperator::set_version(::google::protobuf::uint64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:paxoskv.KVOperator.version)
}

// uint32 operator = 4;
inline void KVOperator::clear_operator_() {
  operator__ = 0u;
}
inline ::google::protobuf::uint32 KVOperator::operator_() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVOperator.operator)
  return operator__;
}
inline void KVOperator::set_operator_(::google::protobuf::uint32 value) {
  
  operator__ = value;
  // @@protoc_insertion_point(field_set:paxoskv.KVOperator.operator)
}

// uint32 sid = 5;
inline void KVOperator::clear_sid() {
  sid_ = 0u;
}
inline ::google::protobuf::uint32 KVOperator::sid() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVOperator.sid)
  return sid_;
}
inline void KVOperator::set_sid(::google::protobuf::uint32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:paxoskv.KVOperator.sid)
}

// -------------------------------------------------------------------

// KVData

// bytes value = 1;
inline void KVData::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KVData::value() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVData.value)
  return value_.GetNoArena();
}
inline void KVData::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxoskv.KVData.value)
}
#if LANG_CXX11
inline void KVData::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxoskv.KVData.value)
}
#endif
inline void KVData::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxoskv.KVData.value)
}
inline void KVData::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxoskv.KVData.value)
}
inline ::std::string* KVData::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:paxoskv.KVData.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVData::release_value() {
  // @@protoc_insertion_point(field_release:paxoskv.KVData.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVData::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:paxoskv.KVData.value)
}

// uint64 version = 2;
inline void KVData::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 KVData::version() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVData.version)
  return version_;
}
inline void KVData::set_version(::google::protobuf::uint64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:paxoskv.KVData.version)
}

// bool isdeleted = 3;
inline void KVData::clear_isdeleted() {
  isdeleted_ = false;
}
inline bool KVData::isdeleted() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVData.isdeleted)
  return isdeleted_;
}
inline void KVData::set_isdeleted(bool value) {
  
  isdeleted_ = value;
  // @@protoc_insertion_point(field_set:paxoskv.KVData.isdeleted)
}

// -------------------------------------------------------------------

// KVResponse

// .paxoskv.KVData data = 1;
inline bool KVResponse::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void KVResponse::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::paxoskv::KVData& KVResponse::data() const {
  const ::paxoskv::KVData* p = data_;
  // @@protoc_insertion_point(field_get:paxoskv.KVResponse.data)
  return p != NULL ? *p : *reinterpret_cast<const ::paxoskv::KVData*>(
      &::paxoskv::_KVData_default_instance_);
}
inline ::paxoskv::KVData* KVResponse::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::paxoskv::KVData;
  }
  // @@protoc_insertion_point(field_mutable:paxoskv.KVResponse.data)
  return data_;
}
inline ::paxoskv::KVData* KVResponse::release_data() {
  // @@protoc_insertion_point(field_release:paxoskv.KVResponse.data)
  
  ::paxoskv::KVData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void KVResponse::set_allocated_data(::paxoskv::KVData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:paxoskv.KVResponse.data)
}

// int32 ret = 2;
inline void KVResponse::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 KVResponse::ret() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVResponse.ret)
  return ret_;
}
inline void KVResponse::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:paxoskv.KVResponse.ret)
}

// uint64 master_nodeid = 3;
inline void KVResponse::clear_master_nodeid() {
  master_nodeid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 KVResponse::master_nodeid() const {
  // @@protoc_insertion_point(field_get:paxoskv.KVResponse.master_nodeid)
  return master_nodeid_;
}
inline void KVResponse::set_master_nodeid(::google::protobuf::uint64 value) {
  
  master_nodeid_ = value;
  // @@protoc_insertion_point(field_set:paxoskv.KVResponse.master_nodeid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace paxoskv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rpc_2eproto__INCLUDED
