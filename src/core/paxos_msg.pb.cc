// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paxos_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "paxos_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace paxos {
class HeaderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Header>
     _instance;
} _Header_default_instance_;
class PaxosMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PaxosMsg>
     _instance;
} _PaxosMsg_default_instance_;
class CheckpointMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckpointMsg>
     _instance;
} _CheckpointMsg_default_instance_;
class AcceptorStateDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AcceptorStateData>
     _instance;
} _AcceptorStateData_default_instance_;
class PaxosNodeInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PaxosNodeInfo>
     _instance;
} _PaxosNodeInfo_default_instance_;
class SystemVariablesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SystemVariables>
     _instance;
} _SystemVariables_default_instance_;
class MasterVariablesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MasterVariables>
     _instance;
} _MasterVariables_default_instance_;
class PaxosValueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PaxosValue>
     _instance;
} _PaxosValue_default_instance_;
class BatchPaxosValuesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BatchPaxosValues>
     _instance;
} _BatchPaxosValues_default_instance_;

namespace protobuf_paxos_5fmsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, cmdid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, version_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, instanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, proposalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, proposalnodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, preacceptid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, preacceptnodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, rejectbypromiseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, nowinstanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, minchoseninstanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, lastchecksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, systemvariables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, mastervariables_),
  7,
  3,
  4,
  5,
  6,
  0,
  9,
  10,
  11,
  12,
  13,
  8,
  14,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, checkpointinstanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, filepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, smid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, buffer_),
  3,
  2,
  4,
  5,
  6,
  7,
  8,
  0,
  9,
  10,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, instanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, promiseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, promisenodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, acceptedid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, acceptednodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, acceptedvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, checksum_),
  1,
  2,
  3,
  4,
  5,
  0,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, nodeid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, membership_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, version_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, masternodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, leasetime_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, smid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchPaxosValues, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchPaxosValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchPaxosValues, values_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(Header)},
  { 13, 33, sizeof(PaxosMsg)},
  { 48, 64, sizeof(CheckpointMsg)},
  { 75, 87, sizeof(AcceptorStateData)},
  { 94, 101, sizeof(PaxosNodeInfo)},
  { 103, 111, sizeof(SystemVariables)},
  { 114, 122, sizeof(MasterVariables)},
  { 125, 132, sizeof(PaxosValue)},
  { 134, 140, sizeof(BatchPaxosValues)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PaxosMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckpointMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AcceptorStateData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PaxosNodeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SystemVariables_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MasterVariables_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PaxosValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BatchPaxosValues_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "paxos_msg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Header_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Header_default_instance_);_PaxosMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PaxosMsg_default_instance_);_CheckpointMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckpointMsg_default_instance_);_AcceptorStateData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AcceptorStateData_default_instance_);_PaxosNodeInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PaxosNodeInfo_default_instance_);_SystemVariables_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SystemVariables_default_instance_);_MasterVariables_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MasterVariables_default_instance_);_PaxosValue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PaxosValue_default_instance_);_BatchPaxosValues_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BatchPaxosValues_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017paxos_msg.proto\022\005paxos\"B\n\006Header\022\013\n\003gi"
      "d\030\001 \002(\004\022\013\n\003rid\030\002 \002(\004\022\r\n\005cmdid\030\003 \002(\005\022\017\n\007v"
      "ersion\030\004 \001(\005\"\315\002\n\010PaxosMsg\022\017\n\007MsgType\030\001 \002"
      "(\005\022\022\n\nInstanceID\030\002 \001(\004\022\016\n\006NodeID\030\003 \001(\004\022\022"
      "\n\nProposalID\030\004 \001(\004\022\026\n\016ProposalNodeID\030\005 \001"
      "(\004\022\r\n\005Value\030\006 \001(\014\022\023\n\013PreAcceptID\030\007 \001(\004\022\027"
      "\n\017PreAcceptNodeID\030\010 \001(\004\022\031\n\021RejectByPromi"
      "seID\030\t \001(\004\022\025\n\rNowInstanceID\030\n \001(\004\022\033\n\023Min"
      "ChosenInstanceID\030\013 \001(\004\022\024\n\014LastChecksum\030\014"
      " \001(\r\022\014\n\004Flag\030\r \001(\r\022\027\n\017SystemVariables\030\016 "
      "\001(\014\022\027\n\017MasterVariables\030\017 \001(\014\"\316\001\n\rCheckpo"
      "intMsg\022\017\n\007MsgType\030\001 \002(\005\022\016\n\006NodeID\030\002 \002(\004\022"
      "\014\n\004Flag\030\003 \001(\005\022\014\n\004UUID\030\004 \002(\004\022\020\n\010Sequence\030"
      "\005 \002(\004\022\034\n\024CheckpointInstanceID\030\006 \001(\004\022\020\n\010C"
      "hecksum\030\007 \001(\r\022\020\n\010FilePath\030\010 \001(\t\022\014\n\004SMID\030"
      "\t \001(\005\022\016\n\006Offset\030\n \001(\004\022\016\n\006Buffer\030\013 \001(\014\"\246\001"
      "\n\021AcceptorStateData\022\022\n\nInstanceID\030\001 \002(\004\022"
      "\021\n\tPromiseID\030\002 \002(\004\022\025\n\rPromiseNodeID\030\003 \002("
      "\004\022\022\n\nAcceptedID\030\004 \002(\004\022\026\n\016AcceptedNodeID\030"
      "\005 \002(\004\022\025\n\rAcceptedValue\030\006 \002(\014\022\020\n\010Checksum"
      "\030\007 \002(\r\",\n\rPaxosNodeInfo\022\013\n\003Rid\030\001 \002(\004\022\016\n\006"
      "Nodeid\030\002 \002(\004\"Y\n\017SystemVariables\022\013\n\003Gid\030\001"
      " \002(\004\022(\n\nMemberShip\030\002 \003(\0132\024.paxos.PaxosNo"
      "deInfo\022\017\n\007Version\030\003 \002(\004\"K\n\017MasterVariabl"
      "es\022\024\n\014MasterNodeid\030\001 \002(\004\022\017\n\007Version\030\002 \002("
      "\004\022\021\n\tLeaseTime\030\003 \002(\r\")\n\nPaxosValue\022\014\n\004SM"
      "ID\030\001 \002(\005\022\r\n\005Value\030\002 \002(\014\"5\n\020BatchPaxosVal"
      "ues\022!\n\006Values\030\001 \003(\0132\021.paxos.PaxosValue"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1118);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "paxos_msg.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_paxos_5fmsg_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Header::kGidFieldNumber;
const int Header::kRidFieldNumber;
const int Header::kCmdidFieldNumber;
const int Header::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Header::Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paxos.Header)
}
Header::Header(const Header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gid_, &from.gid_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&gid_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:paxos.Header)
}

void Header::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&gid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&gid_)) + sizeof(version_));
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:paxos.Header)
  SharedDtor();
}

void Header::SharedDtor() {
}

void Header::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Header::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Header& Header::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Header* Header::New(::google::protobuf::Arena* arena) const {
  Header* n = new Header;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:paxos.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&gid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_) -
        reinterpret_cast<char*>(&gid_)) + sizeof(version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paxos.Header)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 gid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 rid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_rid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cmdid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cmdid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paxos.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paxos.Header)
  return false;
#undef DO_
}

void Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paxos.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 gid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gid(), output);
  }

  // required uint64 rid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->rid(), output);
  }

  // required int32 cmdid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cmdid(), output);
  }

  // optional int32 version = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paxos.Header)
}

::google::protobuf::uint8* Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paxos.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 gid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gid(), target);
  }

  // required uint64 rid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->rid(), target);
  }

  // required int32 cmdid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cmdid(), target);
  }

  // optional int32 version = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paxos.Header)
  return target;
}

size_t Header::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paxos.Header)
  size_t total_size = 0;

  if (has_gid()) {
    // required uint64 gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());
  }

  if (has_rid()) {
    // required uint64 rid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_cmdid()) {
    // required int32 cmdid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmdid());
  }

  return total_size;
}
size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paxos.Header)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());

    // required uint64 rid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required int32 cmdid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmdid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 version = 4;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paxos.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paxos.Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paxos.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paxos.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      gid_ = from.gid_;
    }
    if (cached_has_bits & 0x00000002u) {
      rid_ = from.rid_;
    }
    if (cached_has_bits & 0x00000004u) {
      cmdid_ = from.cmdid_;
    }
    if (cached_has_bits & 0x00000008u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paxos.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paxos.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Header::Swap(Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Header::InternalSwap(Header* other) {
  using std::swap;
  swap(gid_, other->gid_);
  swap(rid_, other->rid_);
  swap(cmdid_, other->cmdid_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Header::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Header

// required uint64 gid = 1;
bool Header::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Header::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
void Header::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Header::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
::google::protobuf::uint64 Header::gid() const {
  // @@protoc_insertion_point(field_get:paxos.Header.gid)
  return gid_;
}
void Header::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:paxos.Header.gid)
}

// required uint64 rid = 2;
bool Header::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Header::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
void Header::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Header::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
::google::protobuf::uint64 Header::rid() const {
  // @@protoc_insertion_point(field_get:paxos.Header.rid)
  return rid_;
}
void Header::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:paxos.Header.rid)
}

// required int32 cmdid = 3;
bool Header::has_cmdid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Header::set_has_cmdid() {
  _has_bits_[0] |= 0x00000004u;
}
void Header::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Header::clear_cmdid() {
  cmdid_ = 0;
  clear_has_cmdid();
}
::google::protobuf::int32 Header::cmdid() const {
  // @@protoc_insertion_point(field_get:paxos.Header.cmdid)
  return cmdid_;
}
void Header::set_cmdid(::google::protobuf::int32 value) {
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:paxos.Header.cmdid)
}

// optional int32 version = 4;
bool Header::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Header::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
void Header::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
void Header::clear_version() {
  version_ = 0;
  clear_has_version();
}
::google::protobuf::int32 Header::version() const {
  // @@protoc_insertion_point(field_get:paxos.Header.version)
  return version_;
}
void Header::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:paxos.Header.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosMsg::kMsgTypeFieldNumber;
const int PaxosMsg::kInstanceIDFieldNumber;
const int PaxosMsg::kNodeIDFieldNumber;
const int PaxosMsg::kProposalIDFieldNumber;
const int PaxosMsg::kProposalNodeIDFieldNumber;
const int PaxosMsg::kValueFieldNumber;
const int PaxosMsg::kPreAcceptIDFieldNumber;
const int PaxosMsg::kPreAcceptNodeIDFieldNumber;
const int PaxosMsg::kRejectByPromiseIDFieldNumber;
const int PaxosMsg::kNowInstanceIDFieldNumber;
const int PaxosMsg::kMinChosenInstanceIDFieldNumber;
const int PaxosMsg::kLastChecksumFieldNumber;
const int PaxosMsg::kFlagFieldNumber;
const int PaxosMsg::kSystemVariablesFieldNumber;
const int PaxosMsg::kMasterVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosMsg::PaxosMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paxos.PaxosMsg)
}
PaxosMsg::PaxosMsg(const PaxosMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  systemvariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_systemvariables()) {
    systemvariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemvariables_);
  }
  mastervariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mastervariables()) {
    mastervariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mastervariables_);
  }
  ::memcpy(&instanceid_, &from.instanceid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&instanceid_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:paxos.PaxosMsg)
}

void PaxosMsg::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemvariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mastervariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instanceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&instanceid_)) + sizeof(flag_));
}

PaxosMsg::~PaxosMsg() {
  // @@protoc_insertion_point(destructor:paxos.PaxosMsg)
  SharedDtor();
}

void PaxosMsg::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemvariables_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mastervariables_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaxosMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosMsg::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaxosMsg& PaxosMsg::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PaxosMsg* PaxosMsg::New(::google::protobuf::Arena* arena) const {
  PaxosMsg* n = new PaxosMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:paxos.PaxosMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!systemvariables_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*systemvariables_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!mastervariables_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mastervariables_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&instanceid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msgtype_) -
        reinterpret_cast<char*>(&instanceid_)) + sizeof(msgtype_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&lastchecksum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flag_) -
        reinterpret_cast<char*>(&lastchecksum_)) + sizeof(flag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaxosMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paxos.PaxosMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 MsgType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 InstanceID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_instanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 NodeID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_nodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ProposalID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_proposalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proposalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ProposalNodeID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_proposalnodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proposalnodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes Value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 PreAcceptID = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_preacceptid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &preacceptid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 PreAcceptNodeID = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_preacceptnodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &preacceptnodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 RejectByPromiseID = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_rejectbypromiseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rejectbypromiseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 NowInstanceID = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_nowinstanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nowinstanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 MinChosenInstanceID = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_minchoseninstanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &minchoseninstanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 LastChecksum = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_lastchecksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastchecksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Flag = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes SystemVariables = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_systemvariables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes MasterVariables = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mastervariables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paxos.PaxosMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paxos.PaxosMsg)
  return false;
#undef DO_
}

void PaxosMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paxos.PaxosMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 MsgType = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msgtype(), output);
  }

  // optional uint64 InstanceID = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->instanceid(), output);
  }

  // optional uint64 NodeID = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->nodeid(), output);
  }

  // optional uint64 ProposalID = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->proposalid(), output);
  }

  // optional uint64 ProposalNodeID = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->proposalnodeid(), output);
  }

  // optional bytes Value = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->value(), output);
  }

  // optional uint64 PreAcceptID = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->preacceptid(), output);
  }

  // optional uint64 PreAcceptNodeID = 8;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->preacceptnodeid(), output);
  }

  // optional uint64 RejectByPromiseID = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->rejectbypromiseid(), output);
  }

  // optional uint64 NowInstanceID = 10;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->nowinstanceid(), output);
  }

  // optional uint64 MinChosenInstanceID = 11;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->minchoseninstanceid(), output);
  }

  // optional uint32 LastChecksum = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->lastchecksum(), output);
  }

  // optional uint32 Flag = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->flag(), output);
  }

  // optional bytes SystemVariables = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->systemvariables(), output);
  }

  // optional bytes MasterVariables = 15;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->mastervariables(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paxos.PaxosMsg)
}

::google::protobuf::uint8* PaxosMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paxos.PaxosMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 MsgType = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msgtype(), target);
  }

  // optional uint64 InstanceID = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->instanceid(), target);
  }

  // optional uint64 NodeID = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->nodeid(), target);
  }

  // optional uint64 ProposalID = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->proposalid(), target);
  }

  // optional uint64 ProposalNodeID = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->proposalnodeid(), target);
  }

  // optional bytes Value = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->value(), target);
  }

  // optional uint64 PreAcceptID = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->preacceptid(), target);
  }

  // optional uint64 PreAcceptNodeID = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->preacceptnodeid(), target);
  }

  // optional uint64 RejectByPromiseID = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->rejectbypromiseid(), target);
  }

  // optional uint64 NowInstanceID = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->nowinstanceid(), target);
  }

  // optional uint64 MinChosenInstanceID = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->minchoseninstanceid(), target);
  }

  // optional uint32 LastChecksum = 12;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->lastchecksum(), target);
  }

  // optional uint32 Flag = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->flag(), target);
  }

  // optional bytes SystemVariables = 14;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->systemvariables(), target);
  }

  // optional bytes MasterVariables = 15;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->mastervariables(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paxos.PaxosMsg)
  return target;
}

size_t PaxosMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paxos.PaxosMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes Value = 6;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional bytes SystemVariables = 14;
    if (has_systemvariables()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->systemvariables());
    }

    // optional bytes MasterVariables = 15;
    if (has_mastervariables()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mastervariables());
    }

    // optional uint64 InstanceID = 2;
    if (has_instanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->instanceid());
    }

    // optional uint64 NodeID = 3;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nodeid());
    }

    // optional uint64 ProposalID = 4;
    if (has_proposalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proposalid());
    }

    // optional uint64 ProposalNodeID = 5;
    if (has_proposalnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proposalnodeid());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional uint32 LastChecksum = 12;
    if (has_lastchecksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lastchecksum());
    }

    // optional uint64 PreAcceptID = 7;
    if (has_preacceptid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->preacceptid());
    }

    // optional uint64 PreAcceptNodeID = 8;
    if (has_preacceptnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->preacceptnodeid());
    }

    // optional uint64 RejectByPromiseID = 9;
    if (has_rejectbypromiseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rejectbypromiseid());
    }

    // optional uint64 NowInstanceID = 10;
    if (has_nowinstanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nowinstanceid());
    }

    // optional uint64 MinChosenInstanceID = 11;
    if (has_minchoseninstanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->minchoseninstanceid());
    }

    // optional uint32 Flag = 13;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paxos.PaxosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PaxosMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paxos.PaxosMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paxos.PaxosMsg)
    MergeFrom(*source);
  }
}

void PaxosMsg::MergeFrom(const PaxosMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paxos.PaxosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_systemvariables();
      systemvariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemvariables_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_mastervariables();
      mastervariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mastervariables_);
    }
    if (cached_has_bits & 0x00000008u) {
      instanceid_ = from.instanceid_;
    }
    if (cached_has_bits & 0x00000010u) {
      nodeid_ = from.nodeid_;
    }
    if (cached_has_bits & 0x00000020u) {
      proposalid_ = from.proposalid_;
    }
    if (cached_has_bits & 0x00000040u) {
      proposalnodeid_ = from.proposalnodeid_;
    }
    if (cached_has_bits & 0x00000080u) {
      msgtype_ = from.msgtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      lastchecksum_ = from.lastchecksum_;
    }
    if (cached_has_bits & 0x00000200u) {
      preacceptid_ = from.preacceptid_;
    }
    if (cached_has_bits & 0x00000400u) {
      preacceptnodeid_ = from.preacceptnodeid_;
    }
    if (cached_has_bits & 0x00000800u) {
      rejectbypromiseid_ = from.rejectbypromiseid_;
    }
    if (cached_has_bits & 0x00001000u) {
      nowinstanceid_ = from.nowinstanceid_;
    }
    if (cached_has_bits & 0x00002000u) {
      minchoseninstanceid_ = from.minchoseninstanceid_;
    }
    if (cached_has_bits & 0x00004000u) {
      flag_ = from.flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PaxosMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paxos.PaxosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosMsg::CopyFrom(const PaxosMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paxos.PaxosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000080) != 0x00000080) return false;
  return true;
}

void PaxosMsg::Swap(PaxosMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosMsg::InternalSwap(PaxosMsg* other) {
  using std::swap;
  value_.Swap(&other->value_);
  systemvariables_.Swap(&other->systemvariables_);
  mastervariables_.Swap(&other->mastervariables_);
  swap(instanceid_, other->instanceid_);
  swap(nodeid_, other->nodeid_);
  swap(proposalid_, other->proposalid_);
  swap(proposalnodeid_, other->proposalnodeid_);
  swap(msgtype_, other->msgtype_);
  swap(lastchecksum_, other->lastchecksum_);
  swap(preacceptid_, other->preacceptid_);
  swap(preacceptnodeid_, other->preacceptnodeid_);
  swap(rejectbypromiseid_, other->rejectbypromiseid_);
  swap(nowinstanceid_, other->nowinstanceid_);
  swap(minchoseninstanceid_, other->minchoseninstanceid_);
  swap(flag_, other->flag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosMsg::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosMsg

// required int32 MsgType = 1;
bool PaxosMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PaxosMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000080u;
}
void PaxosMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000080u;
}
void PaxosMsg::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::google::protobuf::int32 PaxosMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.MsgType)
  return msgtype_;
}
void PaxosMsg::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.MsgType)
}

// optional uint64 InstanceID = 2;
bool PaxosMsg::has_instanceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PaxosMsg::set_has_instanceid() {
  _has_bits_[0] |= 0x00000008u;
}
void PaxosMsg::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000008u;
}
void PaxosMsg::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
::google::protobuf::uint64 PaxosMsg::instanceid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.InstanceID)
  return instanceid_;
}
void PaxosMsg::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.InstanceID)
}

// optional uint64 NodeID = 3;
bool PaxosMsg::has_nodeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PaxosMsg::set_has_nodeid() {
  _has_bits_[0] |= 0x00000010u;
}
void PaxosMsg::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000010u;
}
void PaxosMsg::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
::google::protobuf::uint64 PaxosMsg::nodeid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.NodeID)
  return nodeid_;
}
void PaxosMsg::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.NodeID)
}

// optional uint64 ProposalID = 4;
bool PaxosMsg::has_proposalid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PaxosMsg::set_has_proposalid() {
  _has_bits_[0] |= 0x00000020u;
}
void PaxosMsg::clear_has_proposalid() {
  _has_bits_[0] &= ~0x00000020u;
}
void PaxosMsg::clear_proposalid() {
  proposalid_ = GOOGLE_ULONGLONG(0);
  clear_has_proposalid();
}
::google::protobuf::uint64 PaxosMsg::proposalid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.ProposalID)
  return proposalid_;
}
void PaxosMsg::set_proposalid(::google::protobuf::uint64 value) {
  set_has_proposalid();
  proposalid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.ProposalID)
}

// optional uint64 ProposalNodeID = 5;
bool PaxosMsg::has_proposalnodeid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PaxosMsg::set_has_proposalnodeid() {
  _has_bits_[0] |= 0x00000040u;
}
void PaxosMsg::clear_has_proposalnodeid() {
  _has_bits_[0] &= ~0x00000040u;
}
void PaxosMsg::clear_proposalnodeid() {
  proposalnodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_proposalnodeid();
}
::google::protobuf::uint64 PaxosMsg::proposalnodeid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.ProposalNodeID)
  return proposalnodeid_;
}
void PaxosMsg::set_proposalnodeid(::google::protobuf::uint64 value) {
  set_has_proposalnodeid();
  proposalnodeid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.ProposalNodeID)
}

// optional bytes Value = 6;
bool PaxosMsg::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaxosMsg::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void PaxosMsg::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaxosMsg::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& PaxosMsg::value() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.Value)
  return value_.GetNoArena();
}
void PaxosMsg::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.Value)
}
#if LANG_CXX11
void PaxosMsg::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxos.PaxosMsg.Value)
}
#endif
void PaxosMsg::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxos.PaxosMsg.Value)
}
void PaxosMsg::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxos.PaxosMsg.Value)
}
::std::string* PaxosMsg::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:paxos.PaxosMsg.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaxosMsg::release_value() {
  // @@protoc_insertion_point(field_release:paxos.PaxosMsg.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaxosMsg::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:paxos.PaxosMsg.Value)
}

// optional uint64 PreAcceptID = 7;
bool PaxosMsg::has_preacceptid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PaxosMsg::set_has_preacceptid() {
  _has_bits_[0] |= 0x00000200u;
}
void PaxosMsg::clear_has_preacceptid() {
  _has_bits_[0] &= ~0x00000200u;
}
void PaxosMsg::clear_preacceptid() {
  preacceptid_ = GOOGLE_ULONGLONG(0);
  clear_has_preacceptid();
}
::google::protobuf::uint64 PaxosMsg::preacceptid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.PreAcceptID)
  return preacceptid_;
}
void PaxosMsg::set_preacceptid(::google::protobuf::uint64 value) {
  set_has_preacceptid();
  preacceptid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.PreAcceptID)
}

// optional uint64 PreAcceptNodeID = 8;
bool PaxosMsg::has_preacceptnodeid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PaxosMsg::set_has_preacceptnodeid() {
  _has_bits_[0] |= 0x00000400u;
}
void PaxosMsg::clear_has_preacceptnodeid() {
  _has_bits_[0] &= ~0x00000400u;
}
void PaxosMsg::clear_preacceptnodeid() {
  preacceptnodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_preacceptnodeid();
}
::google::protobuf::uint64 PaxosMsg::preacceptnodeid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.PreAcceptNodeID)
  return preacceptnodeid_;
}
void PaxosMsg::set_preacceptnodeid(::google::protobuf::uint64 value) {
  set_has_preacceptnodeid();
  preacceptnodeid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.PreAcceptNodeID)
}

// optional uint64 RejectByPromiseID = 9;
bool PaxosMsg::has_rejectbypromiseid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PaxosMsg::set_has_rejectbypromiseid() {
  _has_bits_[0] |= 0x00000800u;
}
void PaxosMsg::clear_has_rejectbypromiseid() {
  _has_bits_[0] &= ~0x00000800u;
}
void PaxosMsg::clear_rejectbypromiseid() {
  rejectbypromiseid_ = GOOGLE_ULONGLONG(0);
  clear_has_rejectbypromiseid();
}
::google::protobuf::uint64 PaxosMsg::rejectbypromiseid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.RejectByPromiseID)
  return rejectbypromiseid_;
}
void PaxosMsg::set_rejectbypromiseid(::google::protobuf::uint64 value) {
  set_has_rejectbypromiseid();
  rejectbypromiseid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.RejectByPromiseID)
}

// optional uint64 NowInstanceID = 10;
bool PaxosMsg::has_nowinstanceid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void PaxosMsg::set_has_nowinstanceid() {
  _has_bits_[0] |= 0x00001000u;
}
void PaxosMsg::clear_has_nowinstanceid() {
  _has_bits_[0] &= ~0x00001000u;
}
void PaxosMsg::clear_nowinstanceid() {
  nowinstanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_nowinstanceid();
}
::google::protobuf::uint64 PaxosMsg::nowinstanceid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.NowInstanceID)
  return nowinstanceid_;
}
void PaxosMsg::set_nowinstanceid(::google::protobuf::uint64 value) {
  set_has_nowinstanceid();
  nowinstanceid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.NowInstanceID)
}

// optional uint64 MinChosenInstanceID = 11;
bool PaxosMsg::has_minchoseninstanceid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void PaxosMsg::set_has_minchoseninstanceid() {
  _has_bits_[0] |= 0x00002000u;
}
void PaxosMsg::clear_has_minchoseninstanceid() {
  _has_bits_[0] &= ~0x00002000u;
}
void PaxosMsg::clear_minchoseninstanceid() {
  minchoseninstanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_minchoseninstanceid();
}
::google::protobuf::uint64 PaxosMsg::minchoseninstanceid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.MinChosenInstanceID)
  return minchoseninstanceid_;
}
void PaxosMsg::set_minchoseninstanceid(::google::protobuf::uint64 value) {
  set_has_minchoseninstanceid();
  minchoseninstanceid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.MinChosenInstanceID)
}

// optional uint32 LastChecksum = 12;
bool PaxosMsg::has_lastchecksum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PaxosMsg::set_has_lastchecksum() {
  _has_bits_[0] |= 0x00000100u;
}
void PaxosMsg::clear_has_lastchecksum() {
  _has_bits_[0] &= ~0x00000100u;
}
void PaxosMsg::clear_lastchecksum() {
  lastchecksum_ = 0u;
  clear_has_lastchecksum();
}
::google::protobuf::uint32 PaxosMsg::lastchecksum() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.LastChecksum)
  return lastchecksum_;
}
void PaxosMsg::set_lastchecksum(::google::protobuf::uint32 value) {
  set_has_lastchecksum();
  lastchecksum_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.LastChecksum)
}

// optional uint32 Flag = 13;
bool PaxosMsg::has_flag() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void PaxosMsg::set_has_flag() {
  _has_bits_[0] |= 0x00004000u;
}
void PaxosMsg::clear_has_flag() {
  _has_bits_[0] &= ~0x00004000u;
}
void PaxosMsg::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
::google::protobuf::uint32 PaxosMsg::flag() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.Flag)
  return flag_;
}
void PaxosMsg::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.Flag)
}

// optional bytes SystemVariables = 14;
bool PaxosMsg::has_systemvariables() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaxosMsg::set_has_systemvariables() {
  _has_bits_[0] |= 0x00000002u;
}
void PaxosMsg::clear_has_systemvariables() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaxosMsg::clear_systemvariables() {
  systemvariables_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_systemvariables();
}
const ::std::string& PaxosMsg::systemvariables() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.SystemVariables)
  return systemvariables_.GetNoArena();
}
void PaxosMsg::set_systemvariables(const ::std::string& value) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.SystemVariables)
}
#if LANG_CXX11
void PaxosMsg::set_systemvariables(::std::string&& value) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxos.PaxosMsg.SystemVariables)
}
#endif
void PaxosMsg::set_systemvariables(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_systemvariables();
  systemvariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxos.PaxosMsg.SystemVariables)
}
void PaxosMsg::set_systemvariables(const void* value, size_t size) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxos.PaxosMsg.SystemVariables)
}
::std::string* PaxosMsg::mutable_systemvariables() {
  set_has_systemvariables();
  // @@protoc_insertion_point(field_mutable:paxos.PaxosMsg.SystemVariables)
  return systemvariables_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaxosMsg::release_systemvariables() {
  // @@protoc_insertion_point(field_release:paxos.PaxosMsg.SystemVariables)
  clear_has_systemvariables();
  return systemvariables_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaxosMsg::set_allocated_systemvariables(::std::string* systemvariables) {
  if (systemvariables != NULL) {
    set_has_systemvariables();
  } else {
    clear_has_systemvariables();
  }
  systemvariables_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), systemvariables);
  // @@protoc_insertion_point(field_set_allocated:paxos.PaxosMsg.SystemVariables)
}

// optional bytes MasterVariables = 15;
bool PaxosMsg::has_mastervariables() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PaxosMsg::set_has_mastervariables() {
  _has_bits_[0] |= 0x00000004u;
}
void PaxosMsg::clear_has_mastervariables() {
  _has_bits_[0] &= ~0x00000004u;
}
void PaxosMsg::clear_mastervariables() {
  mastervariables_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mastervariables();
}
const ::std::string& PaxosMsg::mastervariables() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosMsg.MasterVariables)
  return mastervariables_.GetNoArena();
}
void PaxosMsg::set_mastervariables(const ::std::string& value) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxos.PaxosMsg.MasterVariables)
}
#if LANG_CXX11
void PaxosMsg::set_mastervariables(::std::string&& value) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxos.PaxosMsg.MasterVariables)
}
#endif
void PaxosMsg::set_mastervariables(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mastervariables();
  mastervariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxos.PaxosMsg.MasterVariables)
}
void PaxosMsg::set_mastervariables(const void* value, size_t size) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxos.PaxosMsg.MasterVariables)
}
::std::string* PaxosMsg::mutable_mastervariables() {
  set_has_mastervariables();
  // @@protoc_insertion_point(field_mutable:paxos.PaxosMsg.MasterVariables)
  return mastervariables_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaxosMsg::release_mastervariables() {
  // @@protoc_insertion_point(field_release:paxos.PaxosMsg.MasterVariables)
  clear_has_mastervariables();
  return mastervariables_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaxosMsg::set_allocated_mastervariables(::std::string* mastervariables) {
  if (mastervariables != NULL) {
    set_has_mastervariables();
  } else {
    clear_has_mastervariables();
  }
  mastervariables_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mastervariables);
  // @@protoc_insertion_point(field_set_allocated:paxos.PaxosMsg.MasterVariables)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckpointMsg::kMsgTypeFieldNumber;
const int CheckpointMsg::kNodeIDFieldNumber;
const int CheckpointMsg::kFlagFieldNumber;
const int CheckpointMsg::kUUIDFieldNumber;
const int CheckpointMsg::kSequenceFieldNumber;
const int CheckpointMsg::kCheckpointInstanceIDFieldNumber;
const int CheckpointMsg::kChecksumFieldNumber;
const int CheckpointMsg::kFilePathFieldNumber;
const int CheckpointMsg::kSMIDFieldNumber;
const int CheckpointMsg::kOffsetFieldNumber;
const int CheckpointMsg::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckpointMsg::CheckpointMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paxos.CheckpointMsg)
}
CheckpointMsg::CheckpointMsg(const CheckpointMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filepath()) {
    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_buffer()) {
    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  ::memcpy(&nodeid_, &from.nodeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&nodeid_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:paxos.CheckpointMsg)
}

void CheckpointMsg::SharedCtor() {
  _cached_size_ = 0;
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nodeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&nodeid_)) + sizeof(offset_));
}

CheckpointMsg::~CheckpointMsg() {
  // @@protoc_insertion_point(destructor:paxos.CheckpointMsg)
  SharedDtor();
}

void CheckpointMsg::SharedDtor() {
  filepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckpointMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckpointMsg::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckpointMsg& CheckpointMsg::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckpointMsg* CheckpointMsg::New(::google::protobuf::Arena* arena) const {
  CheckpointMsg* n = new CheckpointMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckpointMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:paxos.CheckpointMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!filepath_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filepath_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!buffer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*buffer_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&nodeid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&checkpointinstanceid_) -
        reinterpret_cast<char*>(&nodeid_)) + sizeof(checkpointinstanceid_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&checksum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&checksum_)) + sizeof(offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckpointMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paxos.CheckpointMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 MsgType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 NodeID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_nodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Flag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 UUID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_uuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 Sequence = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 CheckpointInstanceID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_checkpointinstanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &checkpointinstanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Checksum = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string FilePath = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filepath().data(), static_cast<int>(this->filepath().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paxos.CheckpointMsg.FilePath");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 SMID = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_smid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 Offset = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes Buffer = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paxos.CheckpointMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paxos.CheckpointMsg)
  return false;
#undef DO_
}

void CheckpointMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paxos.CheckpointMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 MsgType = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msgtype(), output);
  }

  // required uint64 NodeID = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nodeid(), output);
  }

  // optional int32 Flag = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flag(), output);
  }

  // required uint64 UUID = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uuid(), output);
  }

  // required uint64 Sequence = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->sequence(), output);
  }

  // optional uint64 CheckpointInstanceID = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->checkpointinstanceid(), output);
  }

  // optional uint32 Checksum = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->checksum(), output);
  }

  // optional string FilePath = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paxos.CheckpointMsg.FilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->filepath(), output);
  }

  // optional int32 SMID = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->smid(), output);
  }

  // optional uint64 Offset = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->offset(), output);
  }

  // optional bytes Buffer = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->buffer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paxos.CheckpointMsg)
}

::google::protobuf::uint8* CheckpointMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paxos.CheckpointMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 MsgType = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msgtype(), target);
  }

  // required uint64 NodeID = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nodeid(), target);
  }

  // optional int32 Flag = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flag(), target);
  }

  // required uint64 UUID = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uuid(), target);
  }

  // required uint64 Sequence = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->sequence(), target);
  }

  // optional uint64 CheckpointInstanceID = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->checkpointinstanceid(), target);
  }

  // optional uint32 Checksum = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->checksum(), target);
  }

  // optional string FilePath = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paxos.CheckpointMsg.FilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->filepath(), target);
  }

  // optional int32 SMID = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->smid(), target);
  }

  // optional uint64 Offset = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->offset(), target);
  }

  // optional bytes Buffer = 11;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->buffer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paxos.CheckpointMsg)
  return target;
}

size_t CheckpointMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paxos.CheckpointMsg)
  size_t total_size = 0;

  if (has_nodeid()) {
    // required uint64 NodeID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());
  }

  if (has_msgtype()) {
    // required int32 MsgType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }

  if (has_uuid()) {
    // required uint64 UUID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uuid());
  }

  if (has_sequence()) {
    // required uint64 Sequence = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence());
  }

  return total_size;
}
size_t CheckpointMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paxos.CheckpointMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000006c) ^ 0x0000006c) == 0) {  // All required fields are present.
    // required uint64 NodeID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());

    // required int32 MsgType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());

    // required uint64 UUID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uuid());

    // required uint64 Sequence = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string FilePath = 8;
    if (has_filepath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filepath());
    }

    // optional bytes Buffer = 11;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buffer());
    }

  }
  // optional int32 Flag = 3;
  if (has_flag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  // optional uint64 CheckpointInstanceID = 6;
  if (has_checkpointinstanceid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->checkpointinstanceid());
  }

  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 Checksum = 7;
    if (has_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->checksum());
    }

    // optional int32 SMID = 9;
    if (has_smid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->smid());
    }

    // optional uint64 Offset = 10;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckpointMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paxos.CheckpointMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckpointMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckpointMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paxos.CheckpointMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paxos.CheckpointMsg)
    MergeFrom(*source);
  }
}

void CheckpointMsg::MergeFrom(const CheckpointMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paxos.CheckpointMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filepath();
      filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_buffer();
      buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
    }
    if (cached_has_bits & 0x00000004u) {
      nodeid_ = from.nodeid_;
    }
    if (cached_has_bits & 0x00000008u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      flag_ = from.flag_;
    }
    if (cached_has_bits & 0x00000020u) {
      uuid_ = from.uuid_;
    }
    if (cached_has_bits & 0x00000040u) {
      sequence_ = from.sequence_;
    }
    if (cached_has_bits & 0x00000080u) {
      checkpointinstanceid_ = from.checkpointinstanceid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      checksum_ = from.checksum_;
    }
    if (cached_has_bits & 0x00000200u) {
      smid_ = from.smid_;
    }
    if (cached_has_bits & 0x00000400u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CheckpointMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paxos.CheckpointMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckpointMsg::CopyFrom(const CheckpointMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paxos.CheckpointMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckpointMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000006c) != 0x0000006c) return false;
  return true;
}

void CheckpointMsg::Swap(CheckpointMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckpointMsg::InternalSwap(CheckpointMsg* other) {
  using std::swap;
  filepath_.Swap(&other->filepath_);
  buffer_.Swap(&other->buffer_);
  swap(nodeid_, other->nodeid_);
  swap(msgtype_, other->msgtype_);
  swap(flag_, other->flag_);
  swap(uuid_, other->uuid_);
  swap(sequence_, other->sequence_);
  swap(checkpointinstanceid_, other->checkpointinstanceid_);
  swap(checksum_, other->checksum_);
  swap(smid_, other->smid_);
  swap(offset_, other->offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckpointMsg::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckpointMsg

// required int32 MsgType = 1;
bool CheckpointMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CheckpointMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000008u;
}
void CheckpointMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000008u;
}
void CheckpointMsg::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::google::protobuf::int32 CheckpointMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.MsgType)
  return msgtype_;
}
void CheckpointMsg::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.MsgType)
}

// required uint64 NodeID = 2;
bool CheckpointMsg::has_nodeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CheckpointMsg::set_has_nodeid() {
  _has_bits_[0] |= 0x00000004u;
}
void CheckpointMsg::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CheckpointMsg::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
::google::protobuf::uint64 CheckpointMsg::nodeid() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.NodeID)
  return nodeid_;
}
void CheckpointMsg::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.NodeID)
}

// optional int32 Flag = 3;
bool CheckpointMsg::has_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CheckpointMsg::set_has_flag() {
  _has_bits_[0] |= 0x00000010u;
}
void CheckpointMsg::clear_has_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
void CheckpointMsg::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
::google::protobuf::int32 CheckpointMsg::flag() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.Flag)
  return flag_;
}
void CheckpointMsg::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.Flag)
}

// required uint64 UUID = 4;
bool CheckpointMsg::has_uuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CheckpointMsg::set_has_uuid() {
  _has_bits_[0] |= 0x00000020u;
}
void CheckpointMsg::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000020u;
}
void CheckpointMsg::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
::google::protobuf::uint64 CheckpointMsg::uuid() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.UUID)
  return uuid_;
}
void CheckpointMsg::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.UUID)
}

// required uint64 Sequence = 5;
bool CheckpointMsg::has_sequence() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CheckpointMsg::set_has_sequence() {
  _has_bits_[0] |= 0x00000040u;
}
void CheckpointMsg::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000040u;
}
void CheckpointMsg::clear_sequence() {
  sequence_ = GOOGLE_ULONGLONG(0);
  clear_has_sequence();
}
::google::protobuf::uint64 CheckpointMsg::sequence() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.Sequence)
  return sequence_;
}
void CheckpointMsg::set_sequence(::google::protobuf::uint64 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.Sequence)
}

// optional uint64 CheckpointInstanceID = 6;
bool CheckpointMsg::has_checkpointinstanceid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CheckpointMsg::set_has_checkpointinstanceid() {
  _has_bits_[0] |= 0x00000080u;
}
void CheckpointMsg::clear_has_checkpointinstanceid() {
  _has_bits_[0] &= ~0x00000080u;
}
void CheckpointMsg::clear_checkpointinstanceid() {
  checkpointinstanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_checkpointinstanceid();
}
::google::protobuf::uint64 CheckpointMsg::checkpointinstanceid() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.CheckpointInstanceID)
  return checkpointinstanceid_;
}
void CheckpointMsg::set_checkpointinstanceid(::google::protobuf::uint64 value) {
  set_has_checkpointinstanceid();
  checkpointinstanceid_ = value;
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.CheckpointInstanceID)
}

// optional uint32 Checksum = 7;
bool CheckpointMsg::has_checksum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CheckpointMsg::set_has_checksum() {
  _has_bits_[0] |= 0x00000100u;
}
void CheckpointMsg::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000100u;
}
void CheckpointMsg::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
::google::protobuf::uint32 CheckpointMsg::checksum() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.Checksum)
  return checksum_;
}
void CheckpointMsg::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.Checksum)
}

// optional string FilePath = 8;
bool CheckpointMsg::has_filepath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CheckpointMsg::set_has_filepath() {
  _has_bits_[0] |= 0x00000001u;
}
void CheckpointMsg::clear_has_filepath() {
  _has_bits_[0] &= ~0x00000001u;
}
void CheckpointMsg::clear_filepath() {
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filepath();
}
const ::std::string& CheckpointMsg::filepath() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.FilePath)
  return filepath_.GetNoArena();
}
void CheckpointMsg::set_filepath(const ::std::string& value) {
  set_has_filepath();
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.FilePath)
}
#if LANG_CXX11
void CheckpointMsg::set_filepath(::std::string&& value) {
  set_has_filepath();
  filepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxos.CheckpointMsg.FilePath)
}
#endif
void CheckpointMsg::set_filepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filepath();
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxos.CheckpointMsg.FilePath)
}
void CheckpointMsg::set_filepath(const char* value, size_t size) {
  set_has_filepath();
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxos.CheckpointMsg.FilePath)
}
::std::string* CheckpointMsg::mutable_filepath() {
  set_has_filepath();
  // @@protoc_insertion_point(field_mutable:paxos.CheckpointMsg.FilePath)
  return filepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckpointMsg::release_filepath() {
  // @@protoc_insertion_point(field_release:paxos.CheckpointMsg.FilePath)
  clear_has_filepath();
  return filepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckpointMsg::set_allocated_filepath(::std::string* filepath) {
  if (filepath != NULL) {
    set_has_filepath();
  } else {
    clear_has_filepath();
  }
  filepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filepath);
  // @@protoc_insertion_point(field_set_allocated:paxos.CheckpointMsg.FilePath)
}

// optional int32 SMID = 9;
bool CheckpointMsg::has_smid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CheckpointMsg::set_has_smid() {
  _has_bits_[0] |= 0x00000200u;
}
void CheckpointMsg::clear_has_smid() {
  _has_bits_[0] &= ~0x00000200u;
}
void CheckpointMsg::clear_smid() {
  smid_ = 0;
  clear_has_smid();
}
::google::protobuf::int32 CheckpointMsg::smid() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.SMID)
  return smid_;
}
void CheckpointMsg::set_smid(::google::protobuf::int32 value) {
  set_has_smid();
  smid_ = value;
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.SMID)
}

// optional uint64 Offset = 10;
bool CheckpointMsg::has_offset() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CheckpointMsg::set_has_offset() {
  _has_bits_[0] |= 0x00000400u;
}
void CheckpointMsg::clear_has_offset() {
  _has_bits_[0] &= ~0x00000400u;
}
void CheckpointMsg::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
::google::protobuf::uint64 CheckpointMsg::offset() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.Offset)
  return offset_;
}
void CheckpointMsg::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.Offset)
}

// optional bytes Buffer = 11;
bool CheckpointMsg::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CheckpointMsg::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
void CheckpointMsg::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
void CheckpointMsg::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buffer();
}
const ::std::string& CheckpointMsg::buffer() const {
  // @@protoc_insertion_point(field_get:paxos.CheckpointMsg.Buffer)
  return buffer_.GetNoArena();
}
void CheckpointMsg::set_buffer(const ::std::string& value) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxos.CheckpointMsg.Buffer)
}
#if LANG_CXX11
void CheckpointMsg::set_buffer(::std::string&& value) {
  set_has_buffer();
  buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxos.CheckpointMsg.Buffer)
}
#endif
void CheckpointMsg::set_buffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxos.CheckpointMsg.Buffer)
}
void CheckpointMsg::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxos.CheckpointMsg.Buffer)
}
::std::string* CheckpointMsg::mutable_buffer() {
  set_has_buffer();
  // @@protoc_insertion_point(field_mutable:paxos.CheckpointMsg.Buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckpointMsg::release_buffer() {
  // @@protoc_insertion_point(field_release:paxos.CheckpointMsg.Buffer)
  clear_has_buffer();
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckpointMsg::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:paxos.CheckpointMsg.Buffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceptorStateData::kInstanceIDFieldNumber;
const int AcceptorStateData::kPromiseIDFieldNumber;
const int AcceptorStateData::kPromiseNodeIDFieldNumber;
const int AcceptorStateData::kAcceptedIDFieldNumber;
const int AcceptorStateData::kAcceptedNodeIDFieldNumber;
const int AcceptorStateData::kAcceptedValueFieldNumber;
const int AcceptorStateData::kChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceptorStateData::AcceptorStateData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paxos.AcceptorStateData)
}
AcceptorStateData::AcceptorStateData(const AcceptorStateData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  acceptedvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_acceptedvalue()) {
    acceptedvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acceptedvalue_);
  }
  ::memcpy(&instanceid_, &from.instanceid_,
    static_cast<size_t>(reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&instanceid_)) + sizeof(checksum_));
  // @@protoc_insertion_point(copy_constructor:paxos.AcceptorStateData)
}

void AcceptorStateData::SharedCtor() {
  _cached_size_ = 0;
  acceptedvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instanceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&checksum_) -
      reinterpret_cast<char*>(&instanceid_)) + sizeof(checksum_));
}

AcceptorStateData::~AcceptorStateData() {
  // @@protoc_insertion_point(destructor:paxos.AcceptorStateData)
  SharedDtor();
}

void AcceptorStateData::SharedDtor() {
  acceptedvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AcceptorStateData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptorStateData::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AcceptorStateData& AcceptorStateData::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

AcceptorStateData* AcceptorStateData::New(::google::protobuf::Arena* arena) const {
  AcceptorStateData* n = new AcceptorStateData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceptorStateData::Clear() {
// @@protoc_insertion_point(message_clear_start:paxos.AcceptorStateData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_acceptedvalue()) {
    GOOGLE_DCHECK(!acceptedvalue_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*acceptedvalue_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 126u) {
    ::memset(&instanceid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&checksum_) -
        reinterpret_cast<char*>(&instanceid_)) + sizeof(checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AcceptorStateData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paxos.AcceptorStateData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 InstanceID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_instanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 PromiseID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_promiseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &promiseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 PromiseNodeID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_promisenodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &promisenodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 AcceptedID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_acceptedid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &acceptedid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 AcceptedNodeID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_acceptednodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &acceptednodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes AcceptedValue = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_acceptedvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Checksum = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paxos.AcceptorStateData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paxos.AcceptorStateData)
  return false;
#undef DO_
}

void AcceptorStateData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paxos.AcceptorStateData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 InstanceID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->instanceid(), output);
  }

  // required uint64 PromiseID = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->promiseid(), output);
  }

  // required uint64 PromiseNodeID = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->promisenodeid(), output);
  }

  // required uint64 AcceptedID = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->acceptedid(), output);
  }

  // required uint64 AcceptedNodeID = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->acceptednodeid(), output);
  }

  // required bytes AcceptedValue = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->acceptedvalue(), output);
  }

  // required uint32 Checksum = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paxos.AcceptorStateData)
}

::google::protobuf::uint8* AcceptorStateData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paxos.AcceptorStateData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 InstanceID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->instanceid(), target);
  }

  // required uint64 PromiseID = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->promiseid(), target);
  }

  // required uint64 PromiseNodeID = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->promisenodeid(), target);
  }

  // required uint64 AcceptedID = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->acceptedid(), target);
  }

  // required uint64 AcceptedNodeID = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->acceptednodeid(), target);
  }

  // required bytes AcceptedValue = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->acceptedvalue(), target);
  }

  // required uint32 Checksum = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paxos.AcceptorStateData)
  return target;
}

size_t AcceptorStateData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paxos.AcceptorStateData)
  size_t total_size = 0;

  if (has_acceptedvalue()) {
    // required bytes AcceptedValue = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->acceptedvalue());
  }

  if (has_instanceid()) {
    // required uint64 InstanceID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instanceid());
  }

  if (has_promiseid()) {
    // required uint64 PromiseID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promiseid());
  }

  if (has_promisenodeid()) {
    // required uint64 PromiseNodeID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promisenodeid());
  }

  if (has_acceptedid()) {
    // required uint64 AcceptedID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptedid());
  }

  if (has_acceptednodeid()) {
    // required uint64 AcceptedNodeID = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptednodeid());
  }

  if (has_checksum()) {
    // required uint32 Checksum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->checksum());
  }

  return total_size;
}
size_t AcceptorStateData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paxos.AcceptorStateData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required bytes AcceptedValue = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->acceptedvalue());

    // required uint64 InstanceID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instanceid());

    // required uint64 PromiseID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promiseid());

    // required uint64 PromiseNodeID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promisenodeid());

    // required uint64 AcceptedID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptedid());

    // required uint64 AcceptedNodeID = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptednodeid());

    // required uint32 Checksum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->checksum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptorStateData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paxos.AcceptorStateData)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceptorStateData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceptorStateData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paxos.AcceptorStateData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paxos.AcceptorStateData)
    MergeFrom(*source);
  }
}

void AcceptorStateData::MergeFrom(const AcceptorStateData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paxos.AcceptorStateData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_acceptedvalue();
      acceptedvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acceptedvalue_);
    }
    if (cached_has_bits & 0x00000002u) {
      instanceid_ = from.instanceid_;
    }
    if (cached_has_bits & 0x00000004u) {
      promiseid_ = from.promiseid_;
    }
    if (cached_has_bits & 0x00000008u) {
      promisenodeid_ = from.promisenodeid_;
    }
    if (cached_has_bits & 0x00000010u) {
      acceptedid_ = from.acceptedid_;
    }
    if (cached_has_bits & 0x00000020u) {
      acceptednodeid_ = from.acceptednodeid_;
    }
    if (cached_has_bits & 0x00000040u) {
      checksum_ = from.checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AcceptorStateData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paxos.AcceptorStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptorStateData::CopyFrom(const AcceptorStateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paxos.AcceptorStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptorStateData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void AcceptorStateData::Swap(AcceptorStateData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceptorStateData::InternalSwap(AcceptorStateData* other) {
  using std::swap;
  acceptedvalue_.Swap(&other->acceptedvalue_);
  swap(instanceid_, other->instanceid_);
  swap(promiseid_, other->promiseid_);
  swap(promisenodeid_, other->promisenodeid_);
  swap(acceptedid_, other->acceptedid_);
  swap(acceptednodeid_, other->acceptednodeid_);
  swap(checksum_, other->checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceptorStateData::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AcceptorStateData

// required uint64 InstanceID = 1;
bool AcceptorStateData::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AcceptorStateData::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
void AcceptorStateData::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AcceptorStateData::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
::google::protobuf::uint64 AcceptorStateData::instanceid() const {
  // @@protoc_insertion_point(field_get:paxos.AcceptorStateData.InstanceID)
  return instanceid_;
}
void AcceptorStateData::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:paxos.AcceptorStateData.InstanceID)
}

// required uint64 PromiseID = 2;
bool AcceptorStateData::has_promiseid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AcceptorStateData::set_has_promiseid() {
  _has_bits_[0] |= 0x00000004u;
}
void AcceptorStateData::clear_has_promiseid() {
  _has_bits_[0] &= ~0x00000004u;
}
void AcceptorStateData::clear_promiseid() {
  promiseid_ = GOOGLE_ULONGLONG(0);
  clear_has_promiseid();
}
::google::protobuf::uint64 AcceptorStateData::promiseid() const {
  // @@protoc_insertion_point(field_get:paxos.AcceptorStateData.PromiseID)
  return promiseid_;
}
void AcceptorStateData::set_promiseid(::google::protobuf::uint64 value) {
  set_has_promiseid();
  promiseid_ = value;
  // @@protoc_insertion_point(field_set:paxos.AcceptorStateData.PromiseID)
}

// required uint64 PromiseNodeID = 3;
bool AcceptorStateData::has_promisenodeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AcceptorStateData::set_has_promisenodeid() {
  _has_bits_[0] |= 0x00000008u;
}
void AcceptorStateData::clear_has_promisenodeid() {
  _has_bits_[0] &= ~0x00000008u;
}
void AcceptorStateData::clear_promisenodeid() {
  promisenodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_promisenodeid();
}
::google::protobuf::uint64 AcceptorStateData::promisenodeid() const {
  // @@protoc_insertion_point(field_get:paxos.AcceptorStateData.PromiseNodeID)
  return promisenodeid_;
}
void AcceptorStateData::set_promisenodeid(::google::protobuf::uint64 value) {
  set_has_promisenodeid();
  promisenodeid_ = value;
  // @@protoc_insertion_point(field_set:paxos.AcceptorStateData.PromiseNodeID)
}

// required uint64 AcceptedID = 4;
bool AcceptorStateData::has_acceptedid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AcceptorStateData::set_has_acceptedid() {
  _has_bits_[0] |= 0x00000010u;
}
void AcceptorStateData::clear_has_acceptedid() {
  _has_bits_[0] &= ~0x00000010u;
}
void AcceptorStateData::clear_acceptedid() {
  acceptedid_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptedid();
}
::google::protobuf::uint64 AcceptorStateData::acceptedid() const {
  // @@protoc_insertion_point(field_get:paxos.AcceptorStateData.AcceptedID)
  return acceptedid_;
}
void AcceptorStateData::set_acceptedid(::google::protobuf::uint64 value) {
  set_has_acceptedid();
  acceptedid_ = value;
  // @@protoc_insertion_point(field_set:paxos.AcceptorStateData.AcceptedID)
}

// required uint64 AcceptedNodeID = 5;
bool AcceptorStateData::has_acceptednodeid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AcceptorStateData::set_has_acceptednodeid() {
  _has_bits_[0] |= 0x00000020u;
}
void AcceptorStateData::clear_has_acceptednodeid() {
  _has_bits_[0] &= ~0x00000020u;
}
void AcceptorStateData::clear_acceptednodeid() {
  acceptednodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptednodeid();
}
::google::protobuf::uint64 AcceptorStateData::acceptednodeid() const {
  // @@protoc_insertion_point(field_get:paxos.AcceptorStateData.AcceptedNodeID)
  return acceptednodeid_;
}
void AcceptorStateData::set_acceptednodeid(::google::protobuf::uint64 value) {
  set_has_acceptednodeid();
  acceptednodeid_ = value;
  // @@protoc_insertion_point(field_set:paxos.AcceptorStateData.AcceptedNodeID)
}

// required bytes AcceptedValue = 6;
bool AcceptorStateData::has_acceptedvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AcceptorStateData::set_has_acceptedvalue() {
  _has_bits_[0] |= 0x00000001u;
}
void AcceptorStateData::clear_has_acceptedvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
void AcceptorStateData::clear_acceptedvalue() {
  acceptedvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_acceptedvalue();
}
const ::std::string& AcceptorStateData::acceptedvalue() const {
  // @@protoc_insertion_point(field_get:paxos.AcceptorStateData.AcceptedValue)
  return acceptedvalue_.GetNoArena();
}
void AcceptorStateData::set_acceptedvalue(const ::std::string& value) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxos.AcceptorStateData.AcceptedValue)
}
#if LANG_CXX11
void AcceptorStateData::set_acceptedvalue(::std::string&& value) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxos.AcceptorStateData.AcceptedValue)
}
#endif
void AcceptorStateData::set_acceptedvalue(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxos.AcceptorStateData.AcceptedValue)
}
void AcceptorStateData::set_acceptedvalue(const void* value, size_t size) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxos.AcceptorStateData.AcceptedValue)
}
::std::string* AcceptorStateData::mutable_acceptedvalue() {
  set_has_acceptedvalue();
  // @@protoc_insertion_point(field_mutable:paxos.AcceptorStateData.AcceptedValue)
  return acceptedvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AcceptorStateData::release_acceptedvalue() {
  // @@protoc_insertion_point(field_release:paxos.AcceptorStateData.AcceptedValue)
  clear_has_acceptedvalue();
  return acceptedvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AcceptorStateData::set_allocated_acceptedvalue(::std::string* acceptedvalue) {
  if (acceptedvalue != NULL) {
    set_has_acceptedvalue();
  } else {
    clear_has_acceptedvalue();
  }
  acceptedvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acceptedvalue);
  // @@protoc_insertion_point(field_set_allocated:paxos.AcceptorStateData.AcceptedValue)
}

// required uint32 Checksum = 7;
bool AcceptorStateData::has_checksum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AcceptorStateData::set_has_checksum() {
  _has_bits_[0] |= 0x00000040u;
}
void AcceptorStateData::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000040u;
}
void AcceptorStateData::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
::google::protobuf::uint32 AcceptorStateData::checksum() const {
  // @@protoc_insertion_point(field_get:paxos.AcceptorStateData.Checksum)
  return checksum_;
}
void AcceptorStateData::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:paxos.AcceptorStateData.Checksum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosNodeInfo::kRidFieldNumber;
const int PaxosNodeInfo::kNodeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosNodeInfo::PaxosNodeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paxos.PaxosNodeInfo)
}
PaxosNodeInfo::PaxosNodeInfo(const PaxosNodeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rid_, &from.rid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nodeid_) -
    reinterpret_cast<char*>(&rid_)) + sizeof(nodeid_));
  // @@protoc_insertion_point(copy_constructor:paxos.PaxosNodeInfo)
}

void PaxosNodeInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nodeid_) -
      reinterpret_cast<char*>(&rid_)) + sizeof(nodeid_));
}

PaxosNodeInfo::~PaxosNodeInfo() {
  // @@protoc_insertion_point(destructor:paxos.PaxosNodeInfo)
  SharedDtor();
}

void PaxosNodeInfo::SharedDtor() {
}

void PaxosNodeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosNodeInfo::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaxosNodeInfo& PaxosNodeInfo::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PaxosNodeInfo* PaxosNodeInfo::New(::google::protobuf::Arena* arena) const {
  PaxosNodeInfo* n = new PaxosNodeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:paxos.PaxosNodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&rid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nodeid_) -
        reinterpret_cast<char*>(&rid_)) + sizeof(nodeid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaxosNodeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paxos.PaxosNodeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 Rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 Nodeid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_nodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paxos.PaxosNodeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paxos.PaxosNodeInfo)
  return false;
#undef DO_
}

void PaxosNodeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paxos.PaxosNodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 Rid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // required uint64 Nodeid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nodeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paxos.PaxosNodeInfo)
}

::google::protobuf::uint8* PaxosNodeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paxos.PaxosNodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 Rid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // required uint64 Nodeid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nodeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paxos.PaxosNodeInfo)
  return target;
}

size_t PaxosNodeInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paxos.PaxosNodeInfo)
  size_t total_size = 0;

  if (has_rid()) {
    // required uint64 Rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_nodeid()) {
    // required uint64 Nodeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());
  }

  return total_size;
}
size_t PaxosNodeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paxos.PaxosNodeInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 Rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required uint64 Nodeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosNodeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paxos.PaxosNodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PaxosNodeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosNodeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paxos.PaxosNodeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paxos.PaxosNodeInfo)
    MergeFrom(*source);
  }
}

void PaxosNodeInfo::MergeFrom(const PaxosNodeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paxos.PaxosNodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      rid_ = from.rid_;
    }
    if (cached_has_bits & 0x00000002u) {
      nodeid_ = from.nodeid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PaxosNodeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paxos.PaxosNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosNodeInfo::CopyFrom(const PaxosNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paxos.PaxosNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosNodeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PaxosNodeInfo::Swap(PaxosNodeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosNodeInfo::InternalSwap(PaxosNodeInfo* other) {
  using std::swap;
  swap(rid_, other->rid_);
  swap(nodeid_, other->nodeid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosNodeInfo::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosNodeInfo

// required uint64 Rid = 1;
bool PaxosNodeInfo::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaxosNodeInfo::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
void PaxosNodeInfo::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaxosNodeInfo::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
::google::protobuf::uint64 PaxosNodeInfo::rid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosNodeInfo.Rid)
  return rid_;
}
void PaxosNodeInfo::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosNodeInfo.Rid)
}

// required uint64 Nodeid = 2;
bool PaxosNodeInfo::has_nodeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaxosNodeInfo::set_has_nodeid() {
  _has_bits_[0] |= 0x00000002u;
}
void PaxosNodeInfo::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaxosNodeInfo::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
::google::protobuf::uint64 PaxosNodeInfo::nodeid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosNodeInfo.Nodeid)
  return nodeid_;
}
void PaxosNodeInfo::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosNodeInfo.Nodeid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemVariables::kGidFieldNumber;
const int SystemVariables::kMemberShipFieldNumber;
const int SystemVariables::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemVariables::SystemVariables()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paxos.SystemVariables)
}
SystemVariables::SystemVariables(const SystemVariables& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      membership_(from.membership_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gid_, &from.gid_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&gid_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:paxos.SystemVariables)
}

void SystemVariables::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&gid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&gid_)) + sizeof(version_));
}

SystemVariables::~SystemVariables() {
  // @@protoc_insertion_point(destructor:paxos.SystemVariables)
  SharedDtor();
}

void SystemVariables::SharedDtor() {
}

void SystemVariables::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemVariables::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemVariables& SystemVariables::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SystemVariables* SystemVariables::New(::google::protobuf::Arena* arena) const {
  SystemVariables* n = new SystemVariables;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:paxos.SystemVariables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  membership_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&gid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_) -
        reinterpret_cast<char*>(&gid_)) + sizeof(version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SystemVariables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paxos.SystemVariables)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 Gid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paxos.PaxosNodeInfo MemberShip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_membership()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 Version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paxos.SystemVariables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paxos.SystemVariables)
  return false;
#undef DO_
}

void SystemVariables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paxos.SystemVariables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 Gid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gid(), output);
  }

  // repeated .paxos.PaxosNodeInfo MemberShip = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->membership_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->membership(static_cast<int>(i)), output);
  }

  // required uint64 Version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paxos.SystemVariables)
}

::google::protobuf::uint8* SystemVariables::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paxos.SystemVariables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 Gid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gid(), target);
  }

  // repeated .paxos.PaxosNodeInfo MemberShip = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->membership_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->membership(static_cast<int>(i)), deterministic, target);
  }

  // required uint64 Version = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paxos.SystemVariables)
  return target;
}

size_t SystemVariables::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paxos.SystemVariables)
  size_t total_size = 0;

  if (has_gid()) {
    // required uint64 Gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());
  }

  if (has_version()) {
    // required uint64 Version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  return total_size;
}
size_t SystemVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paxos.SystemVariables)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 Gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());

    // required uint64 Version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .paxos.PaxosNodeInfo MemberShip = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->membership_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->membership(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemVariables::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paxos.SystemVariables)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemVariables* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemVariables>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paxos.SystemVariables)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paxos.SystemVariables)
    MergeFrom(*source);
  }
}

void SystemVariables::MergeFrom(const SystemVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paxos.SystemVariables)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  membership_.MergeFrom(from.membership_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      gid_ = from.gid_;
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SystemVariables::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paxos.SystemVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemVariables::CopyFrom(const SystemVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paxos.SystemVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemVariables::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->membership())) return false;
  return true;
}

void SystemVariables::Swap(SystemVariables* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemVariables::InternalSwap(SystemVariables* other) {
  using std::swap;
  membership_.InternalSwap(&other->membership_);
  swap(gid_, other->gid_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemVariables::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemVariables

// required uint64 Gid = 1;
bool SystemVariables::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SystemVariables::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
void SystemVariables::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SystemVariables::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
::google::protobuf::uint64 SystemVariables::gid() const {
  // @@protoc_insertion_point(field_get:paxos.SystemVariables.Gid)
  return gid_;
}
void SystemVariables::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:paxos.SystemVariables.Gid)
}

// repeated .paxos.PaxosNodeInfo MemberShip = 2;
int SystemVariables::membership_size() const {
  return membership_.size();
}
void SystemVariables::clear_membership() {
  membership_.Clear();
}
const ::paxos::PaxosNodeInfo& SystemVariables::membership(int index) const {
  // @@protoc_insertion_point(field_get:paxos.SystemVariables.MemberShip)
  return membership_.Get(index);
}
::paxos::PaxosNodeInfo* SystemVariables::mutable_membership(int index) {
  // @@protoc_insertion_point(field_mutable:paxos.SystemVariables.MemberShip)
  return membership_.Mutable(index);
}
::paxos::PaxosNodeInfo* SystemVariables::add_membership() {
  // @@protoc_insertion_point(field_add:paxos.SystemVariables.MemberShip)
  return membership_.Add();
}
::google::protobuf::RepeatedPtrField< ::paxos::PaxosNodeInfo >*
SystemVariables::mutable_membership() {
  // @@protoc_insertion_point(field_mutable_list:paxos.SystemVariables.MemberShip)
  return &membership_;
}
const ::google::protobuf::RepeatedPtrField< ::paxos::PaxosNodeInfo >&
SystemVariables::membership() const {
  // @@protoc_insertion_point(field_list:paxos.SystemVariables.MemberShip)
  return membership_;
}

// required uint64 Version = 3;
bool SystemVariables::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SystemVariables::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void SystemVariables::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void SystemVariables::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 SystemVariables::version() const {
  // @@protoc_insertion_point(field_get:paxos.SystemVariables.Version)
  return version_;
}
void SystemVariables::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:paxos.SystemVariables.Version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterVariables::kMasterNodeidFieldNumber;
const int MasterVariables::kVersionFieldNumber;
const int MasterVariables::kLeaseTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterVariables::MasterVariables()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paxos.MasterVariables)
}
MasterVariables::MasterVariables(const MasterVariables& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&masternodeid_, &from.masternodeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&leasetime_) -
    reinterpret_cast<char*>(&masternodeid_)) + sizeof(leasetime_));
  // @@protoc_insertion_point(copy_constructor:paxos.MasterVariables)
}

void MasterVariables::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&masternodeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leasetime_) -
      reinterpret_cast<char*>(&masternodeid_)) + sizeof(leasetime_));
}

MasterVariables::~MasterVariables() {
  // @@protoc_insertion_point(destructor:paxos.MasterVariables)
  SharedDtor();
}

void MasterVariables::SharedDtor() {
}

void MasterVariables::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MasterVariables::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MasterVariables& MasterVariables::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MasterVariables* MasterVariables::New(::google::protobuf::Arena* arena) const {
  MasterVariables* n = new MasterVariables;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MasterVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:paxos.MasterVariables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&masternodeid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&leasetime_) -
        reinterpret_cast<char*>(&masternodeid_)) + sizeof(leasetime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MasterVariables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paxos.MasterVariables)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 MasterNodeid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_masternodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &masternodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 Version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 LeaseTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_leasetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leasetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paxos.MasterVariables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paxos.MasterVariables)
  return false;
#undef DO_
}

void MasterVariables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paxos.MasterVariables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 MasterNodeid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->masternodeid(), output);
  }

  // required uint64 Version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->version(), output);
  }

  // required uint32 LeaseTime = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->leasetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paxos.MasterVariables)
}

::google::protobuf::uint8* MasterVariables::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paxos.MasterVariables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 MasterNodeid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->masternodeid(), target);
  }

  // required uint64 Version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->version(), target);
  }

  // required uint32 LeaseTime = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->leasetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paxos.MasterVariables)
  return target;
}

size_t MasterVariables::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paxos.MasterVariables)
  size_t total_size = 0;

  if (has_masternodeid()) {
    // required uint64 MasterNodeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->masternodeid());
  }

  if (has_version()) {
    // required uint64 Version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  if (has_leasetime()) {
    // required uint32 LeaseTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leasetime());
  }

  return total_size;
}
size_t MasterVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paxos.MasterVariables)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 MasterNodeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->masternodeid());

    // required uint64 Version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());

    // required uint32 LeaseTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leasetime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterVariables::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paxos.MasterVariables)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterVariables* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterVariables>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paxos.MasterVariables)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paxos.MasterVariables)
    MergeFrom(*source);
  }
}

void MasterVariables::MergeFrom(const MasterVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paxos.MasterVariables)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      masternodeid_ = from.masternodeid_;
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000004u) {
      leasetime_ = from.leasetime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MasterVariables::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paxos.MasterVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterVariables::CopyFrom(const MasterVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paxos.MasterVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterVariables::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MasterVariables::Swap(MasterVariables* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterVariables::InternalSwap(MasterVariables* other) {
  using std::swap;
  swap(masternodeid_, other->masternodeid_);
  swap(version_, other->version_);
  swap(leasetime_, other->leasetime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MasterVariables::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MasterVariables

// required uint64 MasterNodeid = 1;
bool MasterVariables::has_masternodeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MasterVariables::set_has_masternodeid() {
  _has_bits_[0] |= 0x00000001u;
}
void MasterVariables::clear_has_masternodeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void MasterVariables::clear_masternodeid() {
  masternodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_masternodeid();
}
::google::protobuf::uint64 MasterVariables::masternodeid() const {
  // @@protoc_insertion_point(field_get:paxos.MasterVariables.MasterNodeid)
  return masternodeid_;
}
void MasterVariables::set_masternodeid(::google::protobuf::uint64 value) {
  set_has_masternodeid();
  masternodeid_ = value;
  // @@protoc_insertion_point(field_set:paxos.MasterVariables.MasterNodeid)
}

// required uint64 Version = 2;
bool MasterVariables::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MasterVariables::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void MasterVariables::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void MasterVariables::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 MasterVariables::version() const {
  // @@protoc_insertion_point(field_get:paxos.MasterVariables.Version)
  return version_;
}
void MasterVariables::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:paxos.MasterVariables.Version)
}

// required uint32 LeaseTime = 3;
bool MasterVariables::has_leasetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MasterVariables::set_has_leasetime() {
  _has_bits_[0] |= 0x00000004u;
}
void MasterVariables::clear_has_leasetime() {
  _has_bits_[0] &= ~0x00000004u;
}
void MasterVariables::clear_leasetime() {
  leasetime_ = 0u;
  clear_has_leasetime();
}
::google::protobuf::uint32 MasterVariables::leasetime() const {
  // @@protoc_insertion_point(field_get:paxos.MasterVariables.LeaseTime)
  return leasetime_;
}
void MasterVariables::set_leasetime(::google::protobuf::uint32 value) {
  set_has_leasetime();
  leasetime_ = value;
  // @@protoc_insertion_point(field_set:paxos.MasterVariables.LeaseTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosValue::kSMIDFieldNumber;
const int PaxosValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosValue::PaxosValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paxos.PaxosValue)
}
PaxosValue::PaxosValue(const PaxosValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  smid_ = from.smid_;
  // @@protoc_insertion_point(copy_constructor:paxos.PaxosValue)
}

void PaxosValue::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smid_ = 0;
}

PaxosValue::~PaxosValue() {
  // @@protoc_insertion_point(destructor:paxos.PaxosValue)
  SharedDtor();
}

void PaxosValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaxosValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosValue::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaxosValue& PaxosValue::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PaxosValue* PaxosValue::New(::google::protobuf::Arena* arena) const {
  PaxosValue* n = new PaxosValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosValue::Clear() {
// @@protoc_insertion_point(message_clear_start:paxos.PaxosValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_value()) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  smid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaxosValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paxos.PaxosValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 SMID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_smid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes Value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paxos.PaxosValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paxos.PaxosValue)
  return false;
#undef DO_
}

void PaxosValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paxos.PaxosValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 SMID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->smid(), output);
  }

  // required bytes Value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paxos.PaxosValue)
}

::google::protobuf::uint8* PaxosValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paxos.PaxosValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 SMID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->smid(), target);
  }

  // required bytes Value = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paxos.PaxosValue)
  return target;
}

size_t PaxosValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paxos.PaxosValue)
  size_t total_size = 0;

  if (has_value()) {
    // required bytes Value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  if (has_smid()) {
    // required int32 SMID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->smid());
  }

  return total_size;
}
size_t PaxosValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paxos.PaxosValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes Value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

    // required int32 SMID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->smid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paxos.PaxosValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PaxosValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paxos.PaxosValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paxos.PaxosValue)
    MergeFrom(*source);
  }
}

void PaxosValue::MergeFrom(const PaxosValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paxos.PaxosValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      smid_ = from.smid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PaxosValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paxos.PaxosValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosValue::CopyFrom(const PaxosValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paxos.PaxosValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PaxosValue::Swap(PaxosValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosValue::InternalSwap(PaxosValue* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(smid_, other->smid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosValue::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosValue

// required int32 SMID = 1;
bool PaxosValue::has_smid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaxosValue::set_has_smid() {
  _has_bits_[0] |= 0x00000002u;
}
void PaxosValue::clear_has_smid() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaxosValue::clear_smid() {
  smid_ = 0;
  clear_has_smid();
}
::google::protobuf::int32 PaxosValue::smid() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosValue.SMID)
  return smid_;
}
void PaxosValue::set_smid(::google::protobuf::int32 value) {
  set_has_smid();
  smid_ = value;
  // @@protoc_insertion_point(field_set:paxos.PaxosValue.SMID)
}

// required bytes Value = 2;
bool PaxosValue::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaxosValue::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void PaxosValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaxosValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& PaxosValue::value() const {
  // @@protoc_insertion_point(field_get:paxos.PaxosValue.Value)
  return value_.GetNoArena();
}
void PaxosValue::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paxos.PaxosValue.Value)
}
#if LANG_CXX11
void PaxosValue::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paxos.PaxosValue.Value)
}
#endif
void PaxosValue::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paxos.PaxosValue.Value)
}
void PaxosValue::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paxos.PaxosValue.Value)
}
::std::string* PaxosValue::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:paxos.PaxosValue.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaxosValue::release_value() {
  // @@protoc_insertion_point(field_release:paxos.PaxosValue.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaxosValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:paxos.PaxosValue.Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchPaxosValues::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchPaxosValues::BatchPaxosValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paxos.BatchPaxosValues)
}
BatchPaxosValues::BatchPaxosValues(const BatchPaxosValues& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paxos.BatchPaxosValues)
}

void BatchPaxosValues::SharedCtor() {
  _cached_size_ = 0;
}

BatchPaxosValues::~BatchPaxosValues() {
  // @@protoc_insertion_point(destructor:paxos.BatchPaxosValues)
  SharedDtor();
}

void BatchPaxosValues::SharedDtor() {
}

void BatchPaxosValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchPaxosValues::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchPaxosValues& BatchPaxosValues::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

BatchPaxosValues* BatchPaxosValues::New(::google::protobuf::Arena* arena) const {
  BatchPaxosValues* n = new BatchPaxosValues;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchPaxosValues::Clear() {
// @@protoc_insertion_point(message_clear_start:paxos.BatchPaxosValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BatchPaxosValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paxos.BatchPaxosValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paxos.PaxosValue Values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paxos.BatchPaxosValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paxos.BatchPaxosValues)
  return false;
#undef DO_
}

void BatchPaxosValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paxos.BatchPaxosValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .paxos.PaxosValue Values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paxos.BatchPaxosValues)
}

::google::protobuf::uint8* BatchPaxosValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paxos.BatchPaxosValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .paxos.PaxosValue Values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->values(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paxos.BatchPaxosValues)
  return target;
}

size_t BatchPaxosValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paxos.BatchPaxosValues)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .paxos.PaxosValue Values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchPaxosValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paxos.BatchPaxosValues)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchPaxosValues* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchPaxosValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paxos.BatchPaxosValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paxos.BatchPaxosValues)
    MergeFrom(*source);
  }
}

void BatchPaxosValues::MergeFrom(const BatchPaxosValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paxos.BatchPaxosValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void BatchPaxosValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paxos.BatchPaxosValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchPaxosValues::CopyFrom(const BatchPaxosValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paxos.BatchPaxosValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchPaxosValues::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->values())) return false;
  return true;
}

void BatchPaxosValues::Swap(BatchPaxosValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchPaxosValues::InternalSwap(BatchPaxosValues* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchPaxosValues::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchPaxosValues

// repeated .paxos.PaxosValue Values = 1;
int BatchPaxosValues::values_size() const {
  return values_.size();
}
void BatchPaxosValues::clear_values() {
  values_.Clear();
}
const ::paxos::PaxosValue& BatchPaxosValues::values(int index) const {
  // @@protoc_insertion_point(field_get:paxos.BatchPaxosValues.Values)
  return values_.Get(index);
}
::paxos::PaxosValue* BatchPaxosValues::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:paxos.BatchPaxosValues.Values)
  return values_.Mutable(index);
}
::paxos::PaxosValue* BatchPaxosValues::add_values() {
  // @@protoc_insertion_point(field_add:paxos.BatchPaxosValues.Values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::paxos::PaxosValue >*
BatchPaxosValues::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:paxos.BatchPaxosValues.Values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::paxos::PaxosValue >&
BatchPaxosValues::values() const {
  // @@protoc_insertion_point(field_list:paxos.BatchPaxosValues.Values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace paxos

// @@protoc_insertion_point(global_scope)
